install.packages("knitr")
install.packages(c("cluster", "foreign", "KernSmooth", "lattice", "MASS", "Matrix", "mgcv", "nlme", "nnet", "rpart", "survival"))
install.packages("maps")
install.packages("Hmisc")
install.packages("RColorBrewer")
R.version()
R --version
install.packages("installr")
updateR()
require(installr)
updateR()
install.packages("maps")
install.packages("Hmisc")
install.packages("RColorBrewer")
demo(graphics)
q()
help.start()
install.packages("vcd")
help(package="vcd")
library(vcd)
help(Arthritis)
Arthritis
example(Arthritis)
q()
mydata <- data.frame(age=numeric(0),gender=character(0),weight=numeric(0))
mydata <- edit(mydata)
install.packages(c("formatR", "markdown", "mgcv"))
library(vcd)
counts <- table(Arthritis$Improved)
fix(counts)
counts
barplot(counts,main="Simple Bar plot",xlab="Improvement",ylab="Frequency")
barplot(counts,main="Horizontal Bar plot",xlab="Improvement",ylab="Frequency",horiz=TRUE)
counts <- table(Arthritis$Improved, Arthritis$Treatment)
counts
barplot(counts,main="Stacked Bar plot",xlab="Treatment",ylab="Frequency",col=c("red","yellow","green"),legend=rownames(counts))
barplot(counts,main="Stacked Bar plot",xlab="Treatment",ylab="Frequency",col=c("red","yellow","green"),legend=rownames(counts),beside=TRUE)
states <- data.frame(state.region,state.x77)
View(states)
means <- aggregate(states$Illiteracy, by=list(state.region), FUN=mean)
means
means <- means[order(means$x),]
means
barplot(means$x,names.arg=means$Group.1)
attach(Arthritis)
counts <- table(Treatment,Improved)
spine(counts,main="Spinogram")
detach(Arthritis)
par(mfrow=c(2,2))
hist(mtcars$mpg)
hist(mtcars$mpg,breaks=12,col="red",xlab="Miles Per Gallon",main="colored hist")
boxplot(mtcars$mpg, main="Box", ylab="Miles per Gallon")
par(mfrow=c(1,1))
boxplot(mtcars$mpg, main="Box", ylab="Miles per Gallon")
boxplot.stats(mtcars$mpg)
boxplot(mpg ~ cyl, data=mtcars, main="Car", xlab="Cyl")
install.packages("vioplot")
library(vioplot)
x1 <- mtcars$mpg[mtcars$cyl==4]
x2 <- mtcars$mpg[mtcars$cyl==6]
x3 <- mtcars$mpg[mtcars$cyl==8]
vioplot(x1,x2,x3,names=c("4","6","8"),col="gold")
library(ggplot2)
install.packages(ggplot2)
install.packages("ggplot2")
library(ggplot2)
mpg
help(table)
qplot(displ,hwy,data=mpg)
qplot(displ,hwy,data=mpg,shape=factor(year))
movies
p <- ggplot(movies)
p + stat_bin(aes(year,..count..))
names(data.frame)
names(movies)
p <- ggplot(movies)
p + geom_point(aes(year,length),position='jitter')
movies$title[movies$length>5000]
movies$title[movies$length>3000 & movies$length<5000]
movies$title[movies$length>2000 & movies$length<5000]
library(ggplot2)
names(movies)
max(movies$year)
min(movies$year)
source('H:/everyday_r_ruby/e3-6.r', echo=TRUE)
setwd("H:/everyday_r_ruby")
source('H:/everyday_r_ruby/e3-6.r', echo=TRUE)
source('H:/everyday_r_ruby/e3-6.r', echo=TRUE)
source('H:/everyday_r_ruby/e3-6.r', echo=TRUE)
library(ggplot2)
data <- read.table("simulation1.csv",header=TRUE,sep=",")
df <- data.frame(table(data$X70))
colnames(df) <- c("queue_size","frequency")
percent_labels <- paste(df$frequency,'(',round(df$frequency*100/540,2),'%)')
ggplot(data=df) + theme(legend.position = "none") +
scale_fill_grey(start=0.6, end=0.8) +
geom_bar(aes(x=queue_size,y=frequency,fill=factor(queue_size))) +
library(ggplot2)
data <- read.table("simulation1.csv",header=TRUE,sep=",")
df <- data.frame(table(data$X70))
colnames(df) <- c("queue_size","frequency")
df
library(ggplot2)
data <- read.table("simulation1.csv",header=TRUE,sep=",")
df <- data.frame(table(data$X70))
colnames(df) <- c("queue_size","frequency")
percent_labels <- paste(df$frequency,'(',round(df$frequency*100/540,2),'%)')
library(ggplot2)
data <- read.table("simulation1.csv",header=TRUE,sep=",")
df <- data.frame(table(data$X70))
colnames(df) <- c("queue_size","frequency")
percent_labels <- paste(df$frequency,'(',round(df$frequency*100/540,2),'%)')
ggplot(data=df) + theme(legend.position = "none") +
library(ggplot2)
data <- read.table("simulation1.csv",header=TRUE,sep=",")
df <- data.frame(table(data$X70))
colnames(df) <- c("queue_size","frequency")
percent_labels <- paste(df$frequency,'(',round(df$frequency*100/540,2),'%)')
ggplot(data=df) + theme(legend.position = "none") +
scale_fill_grey(start=0.6, end=0.8) +
enf
library(ggplot2)
data <- read.table("simulation1.csv",header=TRUE,sep=",")
df <- data.frame(table(data$X70))
colnames(df) <- c("queue_size","frequency")
percent_labels <- paste(df$frequency,'(',round(df$frequency*100/540,2),'%)')
ggplot(data=df) + theme(legend.position = "none") +
scale_fill_grey(start=0.6, end=0.8) +
library(ggplot2)
data <- read.table("simulation1.csv",header=TRUE,sep=",")
df <- data.frame(table(data$X70))
colnames(df) <- c("queue_size","frequency")
percent_labels <- paste(df$frequency,'(',round(df$frequency*100/540,2),'%)')
ggplot(data=df) + theme(legend.position = "none") +
scale_fill_grey(start=0.6, end=0.8) +
geom_bar(aes(x=queue_size,y=frequency,fill=factor(queue_size))) +
library(ggplot2)
data <- read.table("simulation1.csv",header=TRUE,sep=",")
df <- data.frame(table(data$X70))
colnames(df) <- c("queue_size","frequency")
percent_labels <- paste(df$frequency,'(',round(df$frequency*100/540,2),'%)')
ggplot(data=df) + theme(legend.position = "none") +
scale_fill_grey(start=0.6, end=0.8) +
geom_bar(aes(x=queue_size,y=frequency,fill=factor(queue_size))) +
geom_text(aes(x=queue_size,y=frequency,label=percent_labels,size=1)) +
library(ggplot2)
data <- read.table("simulation1.csv",header=TRUE,sep=",")
df <- data.frame(table(data$X70))
colnames(df) <- c("queue_size","frequency")
percent_labels <- paste(df$frequency,'(',round(df$frequency*100/540,2),'%)')
source('H:/everyday_r_ruby/e3-6.r', echo=TRUE)
source('H:/everyday_r_ruby/e3-6.r', echo=TRUE)
source('H:/everyday_r_ruby/e3-6.r', echo=TRUE)
source('H:/everyday_r_ruby/e3-6.r', echo=TRUE)
source('H:/everyday_r_ruby/e3-8.r', echo=TRUE)
source('H:/everyday_r_ruby/e3-8.r', echo=TRUE)
library(ggplot2)
data <- read.table("simulation2.csv", header=TRUE, sep=",")
mean <- mean(data)  # mean can be used on data frame, median & max cannot
median <- apply(data,2,median)  # apply median on every column (2 for column)
max <- apply(data,2,max)
df <- data.frame(population=seq(from=1,to=30),mean=mean,median=median,max=max)
df
source('H:/everyday_r_ruby/e3-8.r', echo=TRUE)
source('H:/everyday_r_ruby/e3-9.r', echo=TRUE)
source('H:/everyday_r_ruby/e3-9.r', echo=TRUE)
